@page "/"
@inject HttpClient Http
@inject NavigationManager Navigation

<div class="d-flex justify-content-center align-items-center vh-100 bg-light">
    <div class="card shadow p-4 rounded" style="min-width: 320px; max-width: 400px; width: 100%;">
        <h3 class="text-center mb-4">🔐 Login</h3>

        <div class="form-group mb-3">
            <label for="username" class="form-label">Username</label>
            <InputText @bind-Value="username" class="form-control" id="username" placeholder="Enter your username" />
        </div>

        <div class="form-group mb-3">
            <label for="password" class="form-label">Password</label>
            <InputText @bind-Value="password" type="password" class="form-control" id="password" placeholder="Enter your password" />
        </div>

        <button class="btn btn-primary w-100" @onclick="LoginUser">Login</button>

        @if (!string.IsNullOrEmpty(message))
        {
                <div class="mt-3 alert @alertClass text-center">@message</div>
        }
    </div>
</div>

@code {
    private string username;
    private string password;
    private string message;
    private string alertClass;

    private async Task LoginUser()
    {
        var loginModel = new { Username = username, Password = password };

        try
        {
            var response = await Http.PostAsJsonAsync("https://localhost:7129/api/Auth/login", loginModel);

            if (response.IsSuccessStatusCode)
            {
                message = "✅ Login successful!";
                alertClass = "alert-success";

                // Navigate to dashboard/home page
                await Task.Delay(1000);
                Navigation.NavigateTo("/Home");
            }
            else
            {
                message = "❌ Login failed. Check username/password.";
                alertClass = "alert-danger";
            }
        }
        catch (Exception ex)
        {
            message = "Error: " + ex.Message;
            alertClass = "alert-danger";
        }
    }
}
